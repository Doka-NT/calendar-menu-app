name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Create GitHub Release
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Build App
        run: |
          xcodebuild \
            -scheme "CalendarMenuApp" \
            -project CalendarMenuApp.xcodeproj \
            -configuration Release \
            -derivedDataPath build/DerivedData \
            clean build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
      
      - name: Locate built app
        run: |
          APP_PATH=$(find build/DerivedData -name "CalendarMenuApp.app" -type d | head -n 1)
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
          echo "Found app at: $APP_PATH"
      
      - name: Prepare Release directory
        run: |
          mkdir -p build/Release
          cp -R "$APP_PATH" build/Release/CalendarMenuApp.app
      
      - name: Create DMG
        run: |
          mkdir -p dist
          hdiutil create -volname "CalendarMenuApp" \
            -srcfolder build/Release/CalendarMenuApp.app \
            -ov -format UDZO \
            dist/CalendarMenuApp.dmg
      
      - name: Create App ZIP
        run: |
          cd build/Release
          zip -r ../../dist/CalendarMenuApp.app.zip CalendarMenuApp.app
          cd ../..
      
      - name: Get tag name
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false
          files: |
            dist/CalendarMenuApp.dmg
            dist/CalendarMenuApp.app.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
